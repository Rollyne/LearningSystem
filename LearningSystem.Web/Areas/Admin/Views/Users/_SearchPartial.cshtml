@using LearningSystem.Web.Extensions
@model LearningSystem.Models.ViewModels.Filtering.UserFilterViewModel


@using (Html.BeginForm("Index", "Users", FormMethod.Get)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Search</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Search, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Search, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Search, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.ItemsPerPage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemsPerPage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemsPerPage, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.SearchInUsername, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.BooleanCheckbox(Model.SearchInUsername, "SearchInUsername")
                    @Html.ValidationMessageFor(model => model.SearchInUsername, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.SearchInEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.BooleanCheckbox(Model.SearchInEmail, "SearchInEmail")
                    @Html.ValidationMessageFor(model => model.SearchInEmail, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.SearchInName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.BooleanCheckbox(Model.SearchInName, "SearchInName")
                    @Html.ValidationMessageFor(model => model.SearchInName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
