@model LearningSystem.Models.ViewModels.Filtering.CourseFilterViewModel


@using (Html.BeginForm("Index", "Courses", FormMethod.Get)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CourseFilterViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Search, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Search, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Search, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemsPerPage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemsPerPage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemsPerPage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SearchInName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @if (Model.SearchInName ?? false)
                    {
                        <input type="checkbox" name="SearchInName" checked value="true"/>
                    }
                    else
                    {
                        <input type="checkbox" name="SearchInName" value="true"/>
                    }
                    @Html.ValidationMessageFor(model => model.SearchInName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SearchInDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @if (Model.SearchInDescription ?? false)
                    {
                        <input type="checkbox" name="SearchInDescription" checked value="true"/>
                    }
                    else
                    {
                        <input type="checkbox" name="SearchInDescription" value="true"/>
                    }
                    @Html.ValidationMessageFor(model => model.SearchInDescription, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
